{"version":3,"file":"static/js/757.c2014958.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListitem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n  margin: 50px 0;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  height: 30px;\n  padding: 0 10px;\n  margin-top: 5px;\n\n  font-size: 18px;\n  border: 1px solid #951f99;\n  border-radius: 6px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-self: flex-end;\n  padding: 7px 5px 5px 7px;\n\n  border: none;\n  border-radius: 50%;\n  background-color: green;\n\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { VscAdd } from 'react-icons/vsc';\nimport { Input, Label, Form, Button } from './ContactForm.styled';\n\nexport const ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onInputChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Amina...\"\n          onChange={onInputChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"(093)-55-555-55\"\n          onChange={onInputChange}\n        />\n      </Label>\n      <Button type=\"submit\">\n        <VscAdd size=\"30\" fill=\"white\" />\n      </Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const Contact = styled.p`\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n\n  border: none;\n  border-radius: 50%;\n  background-color: transparent;\n\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { VscTrash } from 'react-icons/vsc';\nimport { Contact, Button } from './ContactListitem.styled';\n\nexport const ContactListitem = ({ name, number, id, deleteContact }) => {\n  return (\n    <>\n      <Contact>\n        {name}: {number}\n      </Contact>\n      <Button type=\"button\" onClick={() => deleteContact(id)}>\n        <VscTrash size=\"30\" fill=\"red\" />\n      </Button>\n    </>\n  );\n};\n\nContactListitem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  deleteContact: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  gap: 10px;\n  margin-top: 20px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 5px;\n\n  border-bottom: 1px solid #951f99;\n`;\n","import { ContactListitem } from 'components/ContactListItem/ContactListItem';\nimport PropTypes from 'prop-types';\nimport { List, Item } from './ContactList.styled';\n\nexport const ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <List>\n      {contacts &&\n        contacts.map(({ name, number, id }) => {\n          return (\n            <Item key={id}>\n              <ContactListitem\n                name={name}\n                number={number}\n                deleteContact={deleteContact}\n                id={id}\n              />\n            </Item>\n          );\n        })}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string,\n    })\n  ),\n  deleteContact: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 250px;\n  height: 30px;\n  padding: 0 10px;\n\n  font-size: 18px;\n  border: 1px solid #951f99;\n  border-radius: 6px;\n`;\n\nexport const Label = styled.label`\n  text-align: center;\n  width: fit-content;\n  margin-top: 20px;\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Input, Label } from './Filter.styled';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport {\n  fetchContactsThunk,\n  addContactsThunk,\n  deleteContactsThunk,\n} from 'Redux/operations/contactsOperation';\nimport { filter } from 'Redux/slices/filterSlice';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nNotiflix.Notify.init({ position: 'center-top', timeout: 1000 });\n\nconst Contacts = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const filterValue = useSelector(state => state.filter.value);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  const onFilterChange = e => {\n    dispatch(filter(e.target.value));\n  };\n\n  const onFilteredContacts = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    if (contacts?.length !== 0) {\n      const filtredContacts = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n      return filtredContacts;\n    }\n  };\n\n  const onFormSubmitState = ({ ...data }) => {\n    const enterName = contacts?.map(contact => contact.name);\n    const enterNumber = contacts?.map(contact => contact.number);\n\n    if (enterName.includes(data.name)) {\n      return Notiflix.Notify.failure(`${data.name} is allready in contact`);\n    }\n    if (enterNumber.includes(data.number)) {\n      return Notiflix.Notify.failure(\n        `This number ${data.number} is allready in contact`\n      );\n    }\n    dispatch(addContactsThunk(data));\n    Notiflix.Notify.success('Add new contact');\n  };\n\n  const deleteContact = contactId => {\n    dispatch(deleteContactsThunk(contactId));\n    Notiflix.Notify.success('Delete contact');\n  };\n\n  return (\n    <>\n      <ContactForm onSubmit={onFormSubmitState} />\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <h2>Contacts</h2>\n        <Filter onChange={onFilterChange} value={filterValue} />\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <ContactList\n            contacts={onFilteredContacts()}\n            deleteContact={deleteContact}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","Label","Input","Button","ContactForm","onSubmit","useState","name","setName","number","setNumber","onInputChange","e","target","value","reset","preventDefault","type","pattern","title","required","placeholder","onChange","size","fill","Contact","ContactListitem","id","deleteContact","onClick","List","Item","ContactList","contacts","map","Filter","Notiflix","position","timeout","useSelector","state","items","isLoading","filterValue","filter","dispatch","useDispatch","useEffect","fetchContactsThunk","data","enterName","contact","enterNumber","includes","addContactsThunk","style","display","flexDirection","alignItems","Loader","normalizedFilter","toLowerCase","length","onFilteredContacts","contactId","deleteContactsThunk"],"sourceRoot":""}